<?php

namespace DoctrineProxies\__CG__\EventoOriginal\Core\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Design extends \EventoOriginal\Core\Entities\Design implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'id', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'name', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'description', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'designer', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'json', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'image', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'previewImage', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'orientation', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'commission', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'status', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'occasions', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'source', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'circularDesignVariant', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'observation', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'category', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'id', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'name', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'description', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'designer', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'json', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'image', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'previewImage', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'orientation', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'commission', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'status', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'occasions', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'source', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'circularDesignVariant', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'observation', '' . "\0" . 'EventoOriginal\\Core\\Entities\\Design' . "\0" . 'category', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Design $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(?string $description): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDesigner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDesigner', []);

        return parent::getDesigner();
    }

    /**
     * {@inheritDoc}
     */
    public function setDesigner(\EventoOriginal\Core\Entities\Designer $designer): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDesigner', [$designer]);

        parent::setDesigner($designer);
    }

    /**
     * {@inheritDoc}
     */
    public function getJson()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJson', []);

        return parent::getJson();
    }

    /**
     * {@inheritDoc}
     */
    public function setJson($json): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJson', [$json]);

        parent::setJson($json);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreviewImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreviewImage', []);

        return parent::getPreviewImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreviewImage($previewImage): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreviewImage', [$previewImage]);

        parent::setPreviewImage($previewImage);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrientation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrientation', []);

        return parent::getOrientation();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrientation($orientation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrientation', [$orientation]);

        return parent::setOrientation($orientation);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommission()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommission', []);

        return parent::getCommission();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommission($commission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommission', [$commission]);

        return parent::setCommission($commission);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(string $status): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\EventoOriginal\Core\Entities\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getOccasions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOccasions', []);

        return parent::getOccasions();
    }

    /**
     * {@inheritDoc}
     */
    public function setOccasions(array $occasions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOccasions', [$occasions]);

        return parent::setOccasions($occasions);
    }

    /**
     * {@inheritDoc}
     */
    public function addOccasion(\EventoOriginal\Core\Entities\Occasion $occasion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOccasion', [$occasion]);

        return parent::addOccasion($occasion);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', []);

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setSource(string $source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', [$source]);

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getCircularDesignVariant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCircularDesignVariant', []);

        return parent::getCircularDesignVariant();
    }

    /**
     * {@inheritDoc}
     */
    public function setCircularDesignVariant($circularDesignVariant): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCircularDesignVariant', [$circularDesignVariant]);

        parent::setCircularDesignVariant($circularDesignVariant);
    }

    /**
     * {@inheritDoc}
     */
    public function getObservation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObservation', []);

        return parent::getObservation();
    }

    /**
     * {@inheritDoc}
     */
    public function setObservation($observation): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObservation', [$observation]);

        parent::setObservation($observation);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

}
